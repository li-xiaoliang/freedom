//Package po generated by 'freedom new-po'
package po

import (
	"github.com/jinzhu/gorm"
	"time"
)

// DomainEvent .
type DomainEvent struct {
	changes map[string]interface{}
	ID      int       `gorm:"primary_key;column:id"`
	Name    string    `gorm:"column:name"`
	Send    int       `gorm:"column:send"`    // 0未发送，1发送
	Content string    `gorm:"column:content"` // 内容
	Created time.Time `gorm:"column:created"`
	Updated time.Time `gorm:"column:updated"`
}

// TableName .
func (obj *DomainEvent) TableName() string {
	return "domain_event"
}

// TakeChanges .
func (obj *DomainEvent) TakeChanges() map[string]interface{} {
	if obj.changes == nil {
		return nil
	}
	result := make(map[string]interface{})
	for k, v := range obj.changes {
		result[k] = v
	}
	obj.changes = nil
	return result
}

// updateChanges .
func (obj *DomainEvent) setChanges(name string, value interface{}) {
	if obj.changes == nil {
		obj.changes = make(map[string]interface{})
	}
	obj.changes[name] = value
}

// SetName .
func (obj *DomainEvent) SetName(name string) {
	obj.Name = name
	obj.setChanges("name", name)
}

// SetSend .
func (obj *DomainEvent) SetSend(send int) {
	obj.Send = send
	obj.setChanges("send", send)
}

// SetContent .
func (obj *DomainEvent) SetContent(content string) {
	obj.Content = content
	obj.setChanges("content", content)
}

// SetCreated .
func (obj *DomainEvent) SetCreated(created time.Time) {
	obj.Created = created
	obj.setChanges("created", created)
}

// SetUpdated .
func (obj *DomainEvent) SetUpdated(updated time.Time) {
	obj.Updated = updated
	obj.setChanges("updated", updated)
}

// AddSend .
func (obj *DomainEvent) AddSend(send int) {
	obj.Send += send
	obj.setChanges("send", gorm.Expr("send + ?", send))
}
